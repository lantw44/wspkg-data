Index: devel/doxygen/Makefile
===================================================================
--- devel/doxygen/Makefile	(revision 357645)
+++ devel/doxygen/Makefile	(working copy)
@@ -2,8 +2,7 @@
 # $FreeBSD$
 
 PORTNAME=	doxygen
-PORTVERSION=	1.8.3.1
-PORTREVISION=	1
+PORTVERSION=	1.8.7
 CATEGORIES=	devel
 MASTER_SITES=	ftp://ftp.stack.nl/pub/users/dimitri/ \
 		http://ftp.stack.nl/pub/users/dimitri/
@@ -15,8 +14,9 @@
 LICENSE=	GPLv2
 LICENSE_FILE=	${WRKSRC}/LICENSE
 
-BUILD_DEPENDS=	tmake:${PORTSDIR}/devel/tmake
-LIB_DEPENDS=	png15:${PORTSDIR}/graphics/png
+BUILD_DEPENDS=	tmake:${PORTSDIR}/devel/tmake \
+		python:${PORTSDIR}/lang/python
+LIB_DEPENDS=	libpng15.so:${PORTSDIR}/graphics/png
 
 USES=		bison iconv perl5 gmake
 ALL_TARGET=	all
@@ -72,6 +72,10 @@
 PLIST_FILES+=	bin/doxywizard
 .endif # QT4
 
+post-patch:
+	@${REINPLACE_CMD} -e 's|DOXYGEN_BIN=.*|DOXYGEN_BIN=true|' \
+		${WRKSRC}/examples/Makefile.in
+
 pre-configure:
 	@cd ${WRKSRC};for pro in src/*.pro.in addon/doxywizard/doxywizard.pro.in;do \
 		${ECHO} "unix:LIBS += ${ICONV_LIB}" >> $$pro; done
Index: devel/doxygen/distinfo
===================================================================
--- devel/doxygen/distinfo	(revision 357645)
+++ devel/doxygen/distinfo	(working copy)
@@ -1,2 +1,2 @@
-SHA256 (doxygen-1.8.3.1.src.tar.gz) = 0c749f68101b6c04ccb0d9696dd37836a6ba62cd8002add275058a975ee72b55
-SIZE (doxygen-1.8.3.1.src.tar.gz) = 6196887
+SHA256 (doxygen-1.8.7.src.tar.gz) = c6eac6b6e82148ae15ec5aecee4631547359f284af1ce94474d046ebca6ee3d9
+SIZE (doxygen-1.8.7.src.tar.gz) = 4796875
Index: devel/doxygen/files/patch-addon-doxywizard-Makefile.in
===================================================================
--- devel/doxygen/files/patch-addon-doxywizard-Makefile.in	(revision 357645)
+++ devel/doxygen/files/patch-addon-doxywizard-Makefile.in	(working copy)
@@ -1,11 +0,0 @@
---- addon/doxywizard/Makefile.in.orig	2010-05-23 10:51:31.000000000 -0400
-+++ addon/doxywizard/Makefile.in	2010-06-15 07:44:44.000000000 -0400
-@@ -10,7 +10,7 @@
- # See the GNU General Public License for more details.
- # 
- 
--QMAKE=qmake $(MKSPECS)
-+QMAKE=qmake-qt4 $(MKSPECS)
- 
- all: Makefile.doxywizard  
- 	$(MAKE) -f Makefile.doxywizard 
Index: devel/doxygen/files/patch-examples-Makefile.in
===================================================================
--- devel/doxygen/files/patch-examples-Makefile.in	(revision 357645)
+++ devel/doxygen/files/patch-examples-Makefile.in	(working copy)
@@ -1,16 +0,0 @@
-Disables tests to avoid hang on stable/9 and head.
-
-Temporary fix until correct solution is found.
-
-
-Index: examples/Makefile.in
-@@ -124,7 +124,7 @@
- #	$(DOXYGEN)/bin/doxygen dbusxml.cfg
- 
- diagrams/html/index.html: diagrams_a.h diagrams_b.h diagrams_c.h diagrams_d.h diagrams_e.h diagrams.cfg
--ifneq ($(HAVE_DOT),)
--	$(DOXYGEN)/bin/doxygen diagrams.cfg
--endif
-+#ifneq ($(HAVE_DOT),)
-+#	$(DOXYGEN)/bin/doxygen diagrams.cfg
-+#endif
Index: devel/doxygen/files/patch-md5
===================================================================
--- devel/doxygen/files/patch-md5	(revision 357645)
+++ devel/doxygen/files/patch-md5	(working copy)
@@ -1,221 +0,0 @@
---- src/definition.cpp.orig	2011-08-19 15:34:17.000000000 +0800
-+++ src/definition.cpp	2011-10-31 17:32:47.870380518 +0800
-@@ -18,6 +18,7 @@
- #include "qtbc.h"
- #include <ctype.h>
- #include <qregexp.h>
-+#include <sys/types.h>
- #include "md5.h"
- #include <stdio.h>
- #include <stdlib.h>
-@@ -361,13 +362,11 @@
- 
- bool Definition::_docsAlreadyAdded(const QCString &doc)
- {
--  uchar md5_sig[16];
-   QCString sigStr(33);
-   // to avoid mismatches due to differences in indenting, we first remove
-   // double whitespaces...
-   QCString docStr = doc.simplifyWhiteSpace();
--  MD5Buffer((const unsigned char *)docStr.data(),docStr.length(),md5_sig);
--  MD5SigToString(md5_sig,sigStr.data(),33);
-+  MD5Data((const unsigned char *)docStr.data(),docStr.length(),sigStr.data());
-   if (m_impl->docSignatures.find(sigStr)==-1) // new docs, add signature to prevent re-adding it
-   {
-     m_impl->docSignatures+=":"+sigStr;
---- src/dirdef.cpp.orig	2011-07-26 19:54:31.000000000 +0800
-+++ src/dirdef.cpp	2011-10-31 17:32:47.872380214 +0800
-@@ -1,3 +1,4 @@
-+#include <sys/types.h>
- #include "md5.h"
- 
- #include "dirdef.h"
-@@ -75,10 +76,8 @@
-   QCString result;
- 
-   // convert to md5 hash
--  uchar md5_sig[16];
-   QCString sigStr(33);
--  MD5Buffer((const unsigned char *)anchor.data(),anchor.length(),md5_sig);
--  MD5SigToString(md5_sig,sigStr.data(),33);
-+  MD5Data((const unsigned char *)anchor.data(),anchor.length(),sigStr.data());
-   return sigStr;
- 
-   // old algorithm
---- src/dot.cpp.orig	2011-08-09 02:06:19.000000000 +0800
-+++ src/dot.cpp	2011-10-31 17:32:47.877389789 +0800
-@@ -39,6 +39,7 @@
- #include <qdir.h>
- #include <qfile.h>
- #include "ftextstream.h"
-+#include <sys/types.h>
- #include "md5.h"
- #include <qqueue.h>
- 
-@@ -2063,10 +2064,8 @@
-     }
-     writeGraphFooter(md5stream);
-     resetReNumbering();
--    uchar md5_sig[16];
-     QCString sigStr(33);
--    MD5Buffer((const unsigned char *)theGraph.data(),theGraph.length(),md5_sig);
--    MD5SigToString(md5_sig,sigStr.data(),33);
-+    MD5Data((const unsigned char *)theGraph.data(),theGraph.length(),sigStr.data());
-     bool regenerate=FALSE;
-     if (checkAndUpdateMd5Signature(absBaseName,sigStr) || 
-         !checkDeliverables(absImgName,absMapName))
-@@ -2758,10 +2757,8 @@
-     }
-   }
-   writeGraphFooter(md5stream);
--  uchar md5_sig[16];
-   QCString sigStr(33);
--  MD5Buffer((const unsigned char *)buf.data(),buf.length(),md5_sig);
--  MD5SigToString(md5_sig,sigStr.data(),33);
-+  MD5Data((const unsigned char *)buf.data(),buf.length(),sigStr.data());
-   if (reNumber)
-   {
-     resetReNumbering();
-@@ -3609,10 +3606,8 @@
-   QGString theGraph;
-   FTextStream md5stream(&theGraph);
-   m_dir->writeDepGraph(md5stream);
--  uchar md5_sig[16];
-   QCString sigStr(33);
--  MD5Buffer((const unsigned char *)theGraph.data(),theGraph.length(),md5_sig);
--  MD5SigToString(md5_sig,sigStr.data(),33);
-+  MD5Data((const unsigned char *)theGraph.data(),theGraph.length(),sigStr.data());
-   bool regenerate=FALSE;
-   if (checkAndUpdateMd5Signature(absBaseName,sigStr) ||
-       !checkDeliverables(format==BITMAP ? absImgName :
-@@ -3739,10 +3734,8 @@
-   md5stream << "  Node18 -> Node9 [dir=\"back\",color=\"darkorchid3\",fontsize=\"" << FONTSIZE << "\",style=\"dashed\",label=\"m_usedClass\",fontname=\"" << FONTNAME << "\"];\n";
-   md5stream << "  Node18 [shape=\"box\",label=\"Used\",fontsize=\"" << FONTSIZE << "\",height=0.2,width=0.4,fontname=\"" << FONTNAME << "\",color=\"black\",URL=\"$classUsed" << Doxygen::htmlFileExtension << "\"];\n";
-   writeGraphFooter(md5stream);
--  uchar md5_sig[16];
-   QCString sigStr(33);
--  MD5Buffer((const unsigned char *)theGraph.data(),theGraph.length(),md5_sig);
--  MD5SigToString(md5_sig,sigStr.data(),33);
-+  MD5Data((const unsigned char *)theGraph.data(),theGraph.length(),sigStr.data());
-   QCString absBaseName = (QCString)path+"/graph_legend";
-   QCString absDotName  = absBaseName+".dot";
-   QCString imgExt      = Config_getEnum("DOT_IMAGE_FORMAT");
-@@ -4139,10 +4132,8 @@
- 
-   writeGraphFooter(md5stream);
-   resetReNumbering();
--  uchar md5_sig[16];
-   QCString sigStr(33);
--  MD5Buffer((const unsigned char *)theGraph.data(),theGraph.length(),md5_sig);
--  MD5SigToString(md5_sig,sigStr.data(),33);
-+  MD5Data((const unsigned char *)theGraph.data(),theGraph.length(),sigStr.data());
-   QCString imgExt      = Config_getEnum("DOT_IMAGE_FORMAT");
-   QCString baseName    = m_diskName;
-   QCString imgName     = baseName+"."+imgExt;
---- src/doxygen.pro.in.orig	2011-01-04 04:14:46.000000000 +0800
-+++ src/doxygen.pro.in	2011-10-31 17:32:47.879381383 +0800
-@@ -18,7 +18,7 @@
- CONFIG       =	console warn_on $extraopts
- HEADERS      =	doxygen.h 
- SOURCES      =	main.cpp 
--unix:LIBS                  += -L../lib -ldoxygen -ldoxycfg -lqtools -lmd5 -lpthread
-+unix:LIBS                  += -L../lib -ldoxygen -ldoxycfg -lqtools -lmd -lpthread
- win32:INCLUDEPATH          += .
- win32-mingw:LIBS           += -L../lib -ldoxygen -ldoxycfg -lqtools -lmd5 -lpthread
- win32-msvc:LIBS            += qtools.lib md5.lib doxygen.lib doxycfg.lib shell32.lib iconv.lib
-@@ -28,7 +28,7 @@
- win32:TMAKE_CXXFLAGS       += -DQT_NODLL
- win32-g++:LIBS             = -L../lib -ldoxygen -ldoxycfg -lqtools -lmd5 -liconv -lpthread
- win32-g++:TMAKE_CXXFLAGS   += -fno-exceptions -fno-rtti
--INCLUDEPATH                += ../qtools ../libmd5 .
-+INCLUDEPATH                += ../qtools .
- DESTDIR                    =  ../bin
- TARGET                     =  doxygen
- unix:TARGETDEPS            =  ../lib/libdoxygen.a ../lib/libdoxycfg.a
---- src/memberdef.cpp.orig	2011-08-18 22:46:40.000000000 +0800
-+++ src/memberdef.cpp	2011-10-31 17:35:14.027187598 +0800
-@@ -19,6 +19,7 @@
- #include <qglobal.h>
- #include <qregexp.h>
- #include <assert.h>
-+#include <sys/types.h>
- #include "md5.h"
- #include "memberdef.h"
- #include "membername.h"
-@@ -2771,11 +2772,9 @@
-   }
-   
-   // convert to md5 hash
--  uchar md5_sig[16];
-   QCString sigStr(33);
--  MD5Buffer((const unsigned char *)memAnchor.data(),memAnchor.length(),md5_sig);
-+  MD5Data((const unsigned char *)memAnchor.data(),memAnchor.length(),sigStr.data());
-   //printf("memAnchor=%s\n",memAnchor.data());
--  MD5SigToString(md5_sig,sigStr.data(),33);
-   m_impl->anc = "a"+sigStr;
- }
- 
---- src/membergroup.cpp.orig	2011-04-22 18:08:07.000000000 +0800
-+++ src/membergroup.cpp	2011-10-31 17:32:47.886381993 +0800
-@@ -265,12 +265,10 @@
- 
- QCString MemberGroup::anchor() const
- {
--  uchar md5_sig[16];
-   QCString sigStr(33);
-   QCString locHeader = grpHeader;
-   if (locHeader.isEmpty()) locHeader="[NOHEADER]";
--  MD5Buffer((const unsigned char *)locHeader.data(),locHeader.length(),md5_sig);
--  MD5SigToString(md5_sig,sigStr.data(),33);
-+  MD5Data((const unsigned char *)locHeader.data(),locHeader.length(),sigStr.data());
-   return "amgrp"+sigStr;
- }
- 
---- src/util.cpp.orig	2011-08-19 23:11:12.000000000 +0800
-+++ src/util.cpp	2011-10-31 17:32:47.892382197 +0800
-@@ -20,6 +20,7 @@
- #include <errno.h>
- #include <math.h>
- 
-+#include <sys/types.h>
- #include "md5.h"
- 
- #include "qtbc.h"
-@@ -4901,16 +4902,16 @@
-     if (resultLen>=128) // prevent names that cannot be created!
-     {
-       // third algorithm based on MD5 hash
--      uchar md5_sig[16];
-       QCString sigStr(33);
--      MD5Buffer((const unsigned char *)result.data(),resultLen,md5_sig);
--      MD5SigToString(md5_sig,sigStr.data(),33);
-+      MD5Data((const unsigned char *)result.data(),resultLen,sigStr.data());
-       result=result.left(128-32)+sigStr; 
-     }
-   }
-   if (createSubdirs)
-   {
-+#if MAP_ALGO==ALGO_COUNT || MAP_ALGO==ALGO_CRC16
-     int l1Dir=0,l2Dir=0;
-+#endif
- 
- #if MAP_ALGO==ALGO_COUNT 
-     // old algorithm, has the problem that after regeneration the
-@@ -4941,12 +4942,13 @@
-     l2Dir = (dirNum>>4)&0xff;
- #elif MAP_ALGO==ALGO_MD5
-     // third algorithm based on MD5 hash
--    uchar md5_sig[16];
--    MD5Buffer((const unsigned char *)result.data(),result.length(),md5_sig);
--    l1Dir = md5_sig[14]&0xf;
--    l2Dir = md5_sig[15];
-+    char md5[33];
-+    MD5Data((const unsigned char *)result.data(),result.length(),md5);
-+    result.prepend(QCString().sprintf("d%c/d%c%c/",md5[29],md5[30],md5[31]));
- #endif
-+#if MAP_ALGO==ALGO_COUNT || MAP_ALGO==ALGO_CRC16
-     result.prepend(QCString().sprintf("d%x/d%02x/",l1Dir,l2Dir));
-+#endif
-   }
-   //printf("*** convertNameToFile(%s)->%s\n",name,result.data());
-   return result;
Index: devel/doxygen/files/patch-md5-definition
===================================================================
--- devel/doxygen/files/patch-md5-definition	(revision 0)
+++ devel/doxygen/files/patch-md5-definition	(working copy)
@@ -0,0 +1,25 @@
+--- src/definition.cpp-orig	2014-06-11 20:09:07.000000000 +0200
++++ src/definition.cpp	2014-06-11 20:12:32.000000000 +0200
+@@ -17,6 +17,7 @@
+ 
+ #include <ctype.h>
+ #include <qregexp.h>
++#include <sys/types.h>
+ #include "md5.h"
+ #include <stdio.h>
+ #include <stdlib.h>
+@@ -539,13 +540,11 @@
+ 
+ bool Definition::_docsAlreadyAdded(const QCString &doc,QCString &sigList)
+ {
+-  uchar md5_sig[16];
+   QCString sigStr(33);
+   // to avoid mismatches due to differences in indenting, we first remove
+   // double whitespaces...
+   QCString docStr = doc.simplifyWhiteSpace();
+-  MD5Buffer((const unsigned char *)docStr.data(),docStr.length(),md5_sig);
+-  MD5SigToString(md5_sig,sigStr.data(),33);
++  MD5Data((const unsigned char *)docStr.data(),docStr.length(),sigStr.data());
+   //printf("%s:_docsAlreadyAdded doc='%s' sig='%s' docSigs='%s'\n",
+   //    name().data(),doc.data(),sigStr.data(),sigList.data());
+   if (sigList.find(sigStr)==-1) // new docs, add signature to prevent re-adding it
Index: devel/doxygen/files/patch-md5-dirdef
===================================================================
--- devel/doxygen/files/patch-md5-dirdef	(revision 0)
+++ devel/doxygen/files/patch-md5-dirdef	(working copy)
@@ -0,0 +1,19 @@
+--- src/dirdef.cpp-orig	2014-06-11 20:11:16.000000000 +0200
++++ src/dirdef.cpp	2014-06-11 20:11:59.000000000 +0200
+@@ -1,3 +1,4 @@
++#include <sys/types.h>
+ #include "md5.h"
+ 
+ #include "dirdef.h"
+@@ -83,10 +84,8 @@
+   QCString result;
+ 
+   // convert to md5 hash
+-  uchar md5_sig[16];
+   QCString sigStr(33);
+-  MD5Buffer((const unsigned char *)anchor.data(),anchor.length(),md5_sig);
+-  MD5SigToString(md5_sig,sigStr.data(),33);
++  MD5Data((const unsigned char *)anchor.data(),anchor.length(),sigStr.data());
+   return sigStr;
+ 
+   // old algorithm
Index: devel/doxygen/files/patch-md5-dot
===================================================================
--- devel/doxygen/files/patch-md5-dot	(revision 0)
+++ devel/doxygen/files/patch-md5-dot	(working copy)
@@ -0,0 +1,70 @@
+--- src/dot.cpp-orig	2014-06-11 20:13:39.000000000 +0200
++++ src/dot.cpp	2014-06-11 20:15:32.000000000 +0200
+@@ -44,6 +44,7 @@
+ #include "dirdef.h"
+ #include "vhdldocgen.h"
+ #include "ftextstream.h"
++#include <sys/types.h>
+ #include "md5.h"
+ #include "memberlist.h"
+ #include "groupdef.h"
+@@ -2318,10 +2319,8 @@
+     }
+     writeGraphFooter(md5stream);
+     resetReNumbering();
+-    uchar md5_sig[16];
+     QCString sigStr(33);
+-    MD5Buffer((const unsigned char *)theGraph.data(),theGraph.length(),md5_sig);
+-    MD5SigToString(md5_sig,sigStr.data(),33);
++    MD5Data((const unsigned char *)theGraph.data(),theGraph.length(),sigStr.data());
+     bool regenerate=FALSE;
+     if (checkAndUpdateMd5Signature(absBaseName,sigStr) || 
+         !checkDeliverables(absImgName,absMapName))
+@@ -3021,10 +3020,8 @@
+     }
+   }
+   writeGraphFooter(md5stream);
+-  uchar md5_sig[16];
+   QCString sigStr(33);
+-  MD5Buffer((const unsigned char *)buf.data(),buf.length(),md5_sig);
+-  MD5SigToString(md5_sig,sigStr.data(),33);
++  MD5Data((const unsigned char *)buf.data(),buf.length(),sigStr.data());
+   if (reNumber)
+   {
+     resetReNumbering();
+@@ -3895,10 +3892,8 @@
+   QGString theGraph;
+   FTextStream md5stream(&theGraph);
+   m_dir->writeDepGraph(md5stream);
+-  uchar md5_sig[16];
+   QCString sigStr(33);
+-  MD5Buffer((const unsigned char *)theGraph.data(),theGraph.length(),md5_sig);
+-  MD5SigToString(md5_sig,sigStr.data(),33);
++  MD5Data((const unsigned char *)theGraph.data(),theGraph.length(),sigStr.data());
+   bool regenerate=FALSE;
+   if (checkAndUpdateMd5Signature(absBaseName,sigStr) ||
+       !checkDeliverables(format==BITMAP ? absImgName :
+@@ -4025,10 +4020,8 @@
+   md5stream << "  Node18 -> Node9 [dir=\"back\",color=\"darkorchid3\",fontsize=\"" << FONTSIZE << "\",style=\"dashed\",label=\"m_usedClass\",fontname=\"" << FONTNAME << "\"];\n";
+   md5stream << "  Node18 [shape=\"box\",label=\"Used\",fontsize=\"" << FONTSIZE << "\",height=0.2,width=0.4,fontname=\"" << FONTNAME << "\",color=\"black\",URL=\"$classUsed" << Doxygen::htmlFileExtension << "\"];\n";
+   writeGraphFooter(md5stream);
+-  uchar md5_sig[16];
+   QCString sigStr(33);
+-  MD5Buffer((const unsigned char *)theGraph.data(),theGraph.length(),md5_sig);
+-  MD5SigToString(md5_sig,sigStr.data(),33);
++  MD5Data((const unsigned char *)theGraph.data(),theGraph.length(),sigStr.data());
+   QCString absBaseName = (QCString)path+"/graph_legend";
+   QCString absDotName  = absBaseName+".dot";
+   QCString imgExt      = Config_getEnum("DOT_IMAGE_FORMAT");
+@@ -4424,10 +4417,8 @@
+ 
+   writeGraphFooter(md5stream);
+   resetReNumbering();
+-  uchar md5_sig[16];
+   QCString sigStr(33);
+-  MD5Buffer((const unsigned char *)theGraph.data(),theGraph.length(),md5_sig);
+-  MD5SigToString(md5_sig,sigStr.data(),33);
++  MD5Data((const unsigned char *)theGraph.data(),theGraph.length(),sigStr.data());
+   QCString imgExt      = Config_getEnum("DOT_IMAGE_FORMAT");
+   QCString baseName    = m_diskName;
+   QCString imgName     = baseName+"."+imgExt;
Index: devel/doxygen/files/patch-md5-doxygen.pro.in
===================================================================
--- devel/doxygen/files/patch-md5-doxygen.pro.in	(revision 0)
+++ devel/doxygen/files/patch-md5-doxygen.pro.in	(working copy)
@@ -0,0 +1,20 @@
+--- src/doxygen.pro.in-orig	2014-06-11 20:16:21.000000000 +0200
++++ src/doxygen.pro.in	2014-06-11 20:16:59.000000000 +0200
+@@ -18,7 +18,7 @@
+ CONFIG       =	console warn_on $extraopts
+ HEADERS      =	doxygen.h 
+ SOURCES      =	main.cpp 
+-unix:LIBS                  += -L../lib -ldoxygen -ldoxycfg -lqtools -lmd5 -lpthread %%SQLITE3_LIBS%% %%LIBCLANG_LIBS%%
++unix:LIBS                  += -L../lib -ldoxygen -ldoxycfg -lqtools -lmd -lpthread %%SQLITE3_LIBS%% %%LIBCLANG_LIBS%%
+ win32:INCLUDEPATH          += .
+ win32-mingw:LIBS           += -L../lib -ldoxygen -ldoxycfg -lqtools -lmd5 -lpthread -llibiconv -lole32 %%SQLITE3_LIBS%% %%LIBCLANG_LIBS%%
+ win32-msvc:LIBS            += qtools.lib md5.lib doxygen.lib doxycfg.lib shell32.lib iconv.lib
+@@ -29,7 +29,7 @@
+ win32-g++:LIBS             = -L../lib -ldoxygen -ldoxycfg -lqtools -lmd5 -liconv -lpthread %%SQLITE3_LIBS%% %%LIBCLANG_LIBS%% -Wl,--as-needed -lole32
+ win32-g++:TMAKE_CXXFLAGS   += -fno-exceptions -fno-rtti
+ DEPENDPATH                 += ../generated_src/doxygen
+-INCLUDEPATH                += ../qtools ../libmd5 .
++INCLUDEPATH                += ../qtools .
+ DESTDIR                    =  ../bin
+ TARGET                     =  doxygen
+ unix:TARGETDEPS            =  ../lib/libdoxygen.a ../lib/libdoxycfg.a
Index: devel/doxygen/files/patch-md5-memberdef
===================================================================
--- devel/doxygen/files/patch-md5-memberdef	(revision 0)
+++ devel/doxygen/files/patch-md5-memberdef	(working copy)
@@ -0,0 +1,23 @@
+--- src/memberdef.cpp-orig	2014-06-11 20:17:47.000000000 +0200
++++ src/memberdef.cpp	2014-06-11 20:19:38.000000000 +0200
+@@ -17,6 +17,7 @@
+ #include <qglobal.h>
+ #include <qregexp.h>
+ #include <assert.h>
++#include <sys/types.h>
+ #include "md5.h"
+ #include "memberdef.h"
+ #include "membername.h"
+@@ -3305,11 +3306,9 @@
+   }
+ 
+   // convert to md5 hash
+-  uchar md5_sig[16];
+   QCString sigStr(33);
+-  MD5Buffer((const unsigned char *)memAnchor.data(),memAnchor.length(),md5_sig);
+   //printf("memAnchor=%s\n",memAnchor.data());
+-  MD5SigToString(md5_sig,sigStr.data(),33);
++  MD5Data((const unsigned char *)memAnchor.data(),memAnchor.length(),sigStr.data());
+   m_impl->anc = "a"+sigStr;
+ }
+ 
Index: devel/doxygen/files/patch-md5-membergroup
===================================================================
--- devel/doxygen/files/patch-md5-membergroup	(revision 0)
+++ devel/doxygen/files/patch-md5-membergroup	(working copy)
@@ -0,0 +1,24 @@
+--- src/membergroup.cpp-orig	2014-06-11 20:23:51.000000000 +0200
++++ src/membergroup.cpp	2014-06-11 20:24:25.000000000 +0200
+@@ -28,6 +28,7 @@
+ #include "docparser.h"
+ #include "marshal.h"
+ #include "entry.h"
++#include <sys/types.h>
+ #include "md5.h"
+ 
+ //static QCString idToName(int id)
+@@ -307,12 +308,10 @@
+ 
+ QCString MemberGroup::anchor() const
+ {
+-  uchar md5_sig[16];
+   QCString sigStr(33);
+   QCString locHeader = grpHeader;
+   if (locHeader.isEmpty()) locHeader="[NOHEADER]";
+-  MD5Buffer((const unsigned char *)locHeader.data(),locHeader.length(),md5_sig);
+-  MD5SigToString(md5_sig,sigStr.data(),33);
++  MD5Data((const unsigned char *)locHeader.data(),locHeader.length(),sigStr.data());
+   return "amgrp"+sigStr;
+ }
+ 
Index: devel/doxygen/files/patch-md5-util
===================================================================
--- devel/doxygen/files/patch-md5-util	(revision 0)
+++ devel/doxygen/files/patch-md5-util	(working copy)
@@ -0,0 +1,48 @@
+--- src/util.cpp-orig	2014-06-11 20:24:54.000000000 +0200
++++ src/util.cpp	2014-06-11 20:26:48.000000000 +0200
+@@ -19,6 +19,7 @@
+ #include <errno.h>
+ #include <math.h>
+ 
++#include <sys/types.h>
+ #include "md5.h"
+ 
+ #include <qregexp.h>
+@@ -5283,16 +5284,16 @@
+     if (resultLen>=128) // prevent names that cannot be created!
+     {
+       // third algorithm based on MD5 hash
+-      uchar md5_sig[16];
+       QCString sigStr(33);
+-      MD5Buffer((const unsigned char *)result.data(),resultLen,md5_sig);
+-      MD5SigToString(md5_sig,sigStr.data(),33);
++      MD5Data((const unsigned char *)result.data(),resultLen,sigStr.data());
+       result=result.left(128-32)+sigStr; 
+     }
+   }
+   if (createSubdirs)
+   {
++#if MAP_ALGO==ALGO_COUNT || MAP_ALGO==ALGO_CRC16
+     int l1Dir=0,l2Dir=0;
++#endif
+ 
+ #if MAP_ALGO==ALGO_COUNT 
+     // old algorithm, has the problem that after regeneration the
+@@ -5323,12 +5324,13 @@
+     l2Dir = (dirNum>>4)&0xff;
+ #elif MAP_ALGO==ALGO_MD5
+     // third algorithm based on MD5 hash
+-    uchar md5_sig[16];
+-    MD5Buffer((const unsigned char *)result.data(),result.length(),md5_sig);
+-    l1Dir = md5_sig[14]&0xf;
+-    l2Dir = md5_sig[15];
++    char md5[33];
++    MD5Data((const unsigned char *)result.data(),result.length(),md5);
++    result.prepend(QCString().sprintf("d%c/d%c%c/",md5[29],md5[30],md5[31]));
+ #endif
++#if MAP_ALGO==ALGO_COUNT || MAP_ALGO==ALGO_CRC16
+     result.prepend(QCString().sprintf("d%x/d%02x/",l1Dir,l2Dir));
++#endif
+   }
+   //printf("*** convertNameToFile(%s)->%s\n",name,result.data());
+   return result;
